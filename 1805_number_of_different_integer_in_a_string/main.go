package main

import (
	"fmt"
)

func numDifferentIntegers(word string) int {

	cntMap := make(map[string]int)

	l1 := 0

	n := len(word)
	for l1 < n {

		for l1 < n && (word[l1]-'0' > 9) {
			l1++
		}

		l2 := l1
		for l1 < n && word[l1]-'0' == 0 {
			l1++
		}

		//if l1 == n && l1 > l2 {
		//	cntMap["0"]++
		//}
		zeroLength := l1 - l2

		l2 = l1
		if l1 == n {
			if zeroLength > 0 {
				cntMap["0"]++
			}
		} else {
			for l2 < n && word[l2]-'0' <= 9 {
				l2++
			}
			if l2 > l1 {
				cntMap[word[l1:l2]]++
			}

			if l1 == l2 && zeroLength > 0 {
				cntMap["0"]++
			}
		}

		l1 = l2 + 1
	}

	return len(cntMap)
}

func main() {
	// 3
	//word := "a123bc34d8ef34"
	// 2
	//word := "leet1234code234"

	// 1
	//word := "a1b01c001"

	// 1
	word := "0a0"
	// 1
	//word := "a0a"
	// 2
	//word := "sh8s0"

	// 3
	//word := "2393706880236110407059624696967828762752651982730115221690437821508229419410771541532394006597463715513741725852432559057224478815116557380260390432211227579663571046845842281704281749571110076974264971989893607137140456254346955633455446057823738757323149856858154529105301197388177242583658641529908583934918768953462557716z97438020429952944646288084173334701047574188936201324845149110176716130267041674438237608038734431519439828191344238609567530399189316846359766256507371240530620697102864238792350289978450509162697068948604722646739174590530336510475061521094503850598453536706982695212493902968251702853203929616930291257062173c79487281900662343830648295410"
	res := numDifferentIntegers(word)

	fmt.Printf("res: %v\n", res)

	//num, ok := strconv.Atoi("001")
	//
	//fmt.Printf("ok: %v, num: %v\n", ok, num)
}
